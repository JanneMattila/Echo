function addMessage(n){console.log(n);let t=document.createElement("pre");t.innerText=n;echoElement.insertBefore(t,echoElement.firstChild)}function updateTitle(){document.title=originalTitle+(isFocus||unreadMessages===0?"":`: ${unreadMessages}`)}function copyToClipboard(n){var t=document.getElementById(n);console.log(t.innerText);navigator.clipboard.writeText(t.innerText)}function showHelp(){document.getElementById("helpOpen").style.display="none";document.getElementById("helpClose").style.display="";document.getElementById("help").style.display=""}function hideHelp(){document.getElementById("helpOpen").style.display="";document.getElementById("helpClose").style.display="none";document.getElementById("help").style.display="none"}function clearLog(){console.log("clearing log");echoElement.innerHTML="";updateTitle()}let echoElement=document.getElementById("echo");let protocol=new signalR.JsonHubProtocol,hubRoute="Echo",connection=(new signalR.HubConnectionBuilder).withUrl(hubRoute).withAutomaticReconnect().withHubProtocol(protocol).build();const originalTitle=document.title;let isFocus=!0,unreadMessages=0;window.addEventListener("focus",()=>{isFocus=!0,unreadMessages=0,updateTitle()});window.addEventListener("blur",()=>{isFocus=!1});connection.on("echo",function(n){let t="Date received: "+(new Date).toLocaleTimeString();t+="\n"+n.request;t+="\n\n"+n.headers;t+="\n"+n.body;addMessage(t);isFocus||unreadMessages++;updateTitle()});connection.onclose(function(n){n?addMessage("Connection closed with error: "+n):addMessage("Disconnected")});connection.start().then(function(){}).catch(function(n){addMessage(n)});document.addEventListener("keyup",n=>{n.keyCode===27&&hideHelp()});